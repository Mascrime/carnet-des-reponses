name: Issue to Static Post (Gemini)

on:
  issues:
    types: [opened, edited, reopened, labeled]

permissions:
  contents: write
  issues: write

jobs:
  gen:
    # Run if the title contains [AI-POST] OR if any label name == 'publish'
    if: contains(github.event.issue.title, '[AI-POST]') || contains(github.event.issue.labels.*.name, 'publish')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Stage generator
        run: |
          mkdir -p /tmp/gen
          cp -v scripts/issue_to_static.py /tmp/gen/issue_to_static.py

      - name: Switch to gh-pages
        run: |
          git fetch origin gh-pages || true
          if git ls-remote --exit-code origin gh-pages >/dev/null 2>&1; then
            git checkout gh-pages
            git pull origin gh-pages
          else
            git checkout --orphan gh-pages
            rm -rf *
          fi

      - name: Bootstrap site if missing
        run: |
          mkdir -p assets posts
          [ -f .nojekyll ] || touch .nojekyll
          [ -f assets/style.css ] || cat > assets/style.css <<'CSS'
:root{--fg:#111;--muted:#666;--link:#0a58ca;--bg:#fff;--card:#f7f7f7}
*{box-sizing:border-box}html,body{margin:0;padding:0;background:var(--bg);color:var(--fg);font:16px/1.6 system-ui,-apple-system,Segoe UI,Roboto,Ubuntu}
.wrap{max-width:850px;margin:0 auto;padding:24px}header.wrap{padding-top:32px}
h1{margin:0 0 6px 0;font-size:28px}.sub{margin:0;color:var(--muted)}
.posts{list-style:none;padding:0;margin:12px 0}.posts li{display:flex;justify-content:space-between;align-items:baseline;padding:10px 12px;border-radius:10px;background:var(--card);margin-bottom:8px}
.posts a{text-decoration:none;color:var(--link);font-weight:600}.posts .date{color:var(--muted);font-size:14px;margin-left:12px;white-space:nowrap}
.muted{color:var(--muted)}a{color:var(--link)}article{background:var(--card);padding:18px;border-radius:12px}.back{display:inline-block;margin:8px 0}
CSS
          [ -f index.html ] || cat > index.html <<'HTML'
<!doctype html><html lang="fr"><head><meta charset="utf-8"/><title>Carnet des Réponses</title><meta name="viewport" content="width=device-width,initial-scale=1"/><link rel="stylesheet" href="assets/style.css"/></head>
<body><header class="wrap"><h1>Carnet des Réponses</h1><p class="sub">Des Q/R utiles, publiées simplement.</p></header>
<main class="wrap"><h2>Derniers billets</h2><ul id="post-list" class="posts"></ul><p id="empty" class="muted" style="display:none">Aucun billet pour l’instant.</p></main>
<footer class="wrap muted"><p>© <span id="y"></span> Carnet des Réponses</p></footer>
<script>
document.getElementById('y').textContent=new Date().getFullYear();
(async()=>{try{const r=await fetch('posts.json',{cache:'no-store'});if(!r.ok)throw 0;const p=await r.json();const ul=document.getElementById('post-list');if(!p.length){document.getElementById('empty').style.display='block';return}p.sort((a,b)=>a.date<b.date?1:-1);ul.innerHTML=p.map(x=>`<li><a href="posts/${x.slug}.html">${x.title}</a><span class="date">${x.date}</span></li>`).join('')}catch(e){document.getElementById('empty').style.display='block'}})();
</script></body></html>
HTML
          [ -f posts.json ] || echo "[]" > posts.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: pip install requests markdown

      - name: Generate post with Gemini
        id: gen
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY:  ${{ github.event.issue.body }}
          HINT_TAGS:   ""
        run: |
          python /tmp/gen/issue_to_static.py > /tmp/slug.txt
          echo "slug=$(cat /tmp/slug.txt)" >> $GITHUB_OUTPUT

      - name: Commit & push to gh-pages
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add index.html assets/style.css posts.json posts .nojekyll
          git commit -m "post: ${{ steps.gen.outputs.slug }} (#${{ github.event.issue.number }})" || echo "Nothing to commit"
          git push origin gh-pages

      - name: Comment with link
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          body: |
            ✅ Publié : https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/posts/${{ steps.gen.outputs.slug }}.html
